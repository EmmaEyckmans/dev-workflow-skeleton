import com.wiredforcode.gradle.spawn.*

plugins {
    id "com.moowork.node" version '0.11'
    id "com.moowork.gulp" version '0.11'
}

apply plugin: 'com.wiredforcode.spawn'

description = 'DWS Acceptance Tests'

dependencies {
    compile project(':dws-infrastructure')
    compile project(':dws-domain')
    compile project(':dws-service')
    compile project(':dws-rest')
    compile project(':dws-ui')

    testCompile project(path: ':dws-infrastructure', configuration: 'testArtifacts')
    testCompile project(path: ':dws-domain', configuration: 'testArtifacts')
    testCompile project(path: ':dws-service', configuration: 'testArtifacts')
    testCompile project(path: ':dws-rest', configuration: 'testArtifacts')
}

test.onlyIf {
    project.hasProperty('runAccTests')
}

task runUITestsLocal(type: GulpTask, dependsOn: ['generateNpmResources', 'getBuiltUI', 'startBackend']) {
    args = ['test:local']
}

node {
    version = versions.node
    npmVersion = versions.npm
    download = true
}

task generateNpmResources(type: NpmTask) {
    args = ['install', '--unsafe-perm']
}

runUITestsLocal {}.finalizedBy('stopBackend')

//Start backend jar
task startBackend(type: SpawnProcessTask, dependsOn: [':dws-rest:assemble']) {
    command "java -jar ${tasks.getByPath(':dws-rest:jar').archivePath}"
    ready 'Started Application'
}

task stopBackend(type: KillProcessTask)

//Build UI and copy
task getBuiltUI(type: Copy, dependsOn: ':dws-ui:runGulp') {
    from new File(rootProject.project('dws-ui').projectDir, 'target/dist')
    into 'target/acceptance-tests/front-end'
}

