{"version":3,"sources":["app.module.js","app.route.js","core/core.config.js","core/core.module.js","core/core.pet.service.js","app.js","gallery/gallery.controller.js","gallery/gallery.module.js","setup-date/setup-date.controller.js","setup-date/setup-date.module.js","widgets/widgets.google-maps.directive.js","widgets/widgets.module.js","widgets/widgets.reverse-geocode.directive.js"],"names":["System","register","_export","CoreModule","WidgetModule","GalleryModule","SetupDateModule","PetcupidAppCtrl","setters","_coreCoreModule","_widgetsWidgetsModule","_galleryGalleryModule","_setupDateSetupDateModule","_appRoute","execute","angular","module","name","controller","_classCallCheck","instance","Constructor","TypeError","$router","this","config","path","component","camelToDash","camelToCtrl","UPPERCASE","upperCaseToDashLowerCase","$1","toLowerCase","replace","toUpperCase","substring","$componentLoaderProvider","setTemplateMapping","setCtrlNameMapping","routerConfig","PetService","_coreCoreConfig","_coreCorePetService","service","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$resource","Pet","petId","$inject","value","query","id","get","GalleryCtrl","petService","$location","location","pets","searchCriteria","$","race","selectedPet","$event","newPet","stopPropagation","_galleryGalleryController","SetupDateCtrl","$routeParams","routeParams","pet","selectedLocation","lat","long","_setupDateSetupDateController","GoogleMapsDirective","restrict","scope","marker","element","map","google","maps","Map","center","LatLng","zoom","Marker","position","draggable","event","addListener","$apply","getPosition","lng","ReverseGeocodeDirective","_widgetsWidgetsGoogleMapsDirective","_widgetsWidgetsReverseGeocodeDirective","directive","template","geocoder","Geocoder","$watch","newPosition","latlng","geocode","latLng","results","address","formatted_address"],"mappings":"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","file":"app.min.js","sourcesContent":["import CoreModule from \"core/core.module\";\nimport WidgetModule from \"widgets/widgets.module\";\nimport GalleryModule from \"gallery/gallery.module\";\nimport SetupDateModule from \"setup-date/setup-date.module\";\nimport PetcupidAppCtrl from \"app.route\";\n\nangular\n    .module(\"petcupidApp\", [\n        /* Shared modules */\n        CoreModule.name,\n        WidgetModule.name,\n\n        /* Components */\n        GalleryModule.name,\n        SetupDateModule.name\n    ])\n    .controller(\"PetcupidAppCtrl\", PetcupidAppCtrl);\n","export default class PetcupidAppCtrl {\n\n    constructor($router) {\n        \"ngInject\";\n        $router.config([{\n            path: \"/\",\n            component: \"gallery\"\n        }, {\n            path: \"/pets/:id\",\n            component: \"setupDate\"\n        }]);\n    }\n}\n","let camelToDash = name => {\n    const UPPERCASE = /([A-Z])/g;\n    let upperCaseToDashLowerCase = $1 => `-${$1.toLowerCase()}`;\n\n    return name.replace(UPPERCASE, upperCaseToDashLowerCase);\n};\n\nlet camelToCtrl = name => `${name[0].toUpperCase()}${name.substring(1)}Ctrl`;\n\nexport default $componentLoaderProvider => {\n    \"ngInject\";\n    $componentLoaderProvider.setTemplateMapping(component => `app/${camelToDash(component)}/${camelToDash(component)}.html`);\n    $componentLoaderProvider.setCtrlNameMapping(component => camelToCtrl(component));\n};\n","import routerConfig from \"core/core.config\";\nimport PetService from \"core/core.pet.service\";\n\nexport default angular\n    .module(\"app.core\", [\"ngNewRouter\", \"ngResource\"])\n    .config(routerConfig)\n    .service(\"petService\", PetService);\n","export default class PetService {\n\n    constructor($resource) {\n        \"ngInject\";\n        this.Pet = $resource(\"api/pet/:petId\", {petId: \"@id\"});\n    }\n\n    query() {\n        return this.Pet.query();\n    }\n\n    get(id) {\n        return this.Pet.get({petId: id});\n    }\n}\n","\"use strict\";\n\nSystem.register(\"app.module\", [\"core/core.module\", \"widgets/widgets.module\", \"gallery/gallery.module\", \"setup-date/setup-date.module\", \"app.route\"], function (_export) {\n    var CoreModule, WidgetModule, GalleryModule, SetupDateModule, PetcupidAppCtrl;\n    return {\n        setters: [function (_coreCoreModule) {\n            CoreModule = _coreCoreModule.default;\n        }, function (_widgetsWidgetsModule) {\n            WidgetModule = _widgetsWidgetsModule.default;\n        }, function (_galleryGalleryModule) {\n            GalleryModule = _galleryGalleryModule.default;\n        }, function (_setupDateSetupDateModule) {\n            SetupDateModule = _setupDateSetupDateModule.default;\n        }, function (_appRoute) {\n            PetcupidAppCtrl = _appRoute.default;\n        }],\n        execute: function () {\n            angular.module(\"petcupidApp\", [CoreModule.name, WidgetModule.name, GalleryModule.name, SetupDateModule.name]).controller(\"PetcupidAppCtrl\", PetcupidAppCtrl);\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"app.route\", [], function (_export) {\n    var PetcupidAppCtrl;\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            PetcupidAppCtrl = [\"$router\", function PetcupidAppCtrl($router) {\n                \"ngInject\";\n\n                _classCallCheck(this, PetcupidAppCtrl);\n\n                $router.config([{\n                    path: \"/\",\n                    component: \"gallery\"\n                }, {\n                    path: \"/pets/:id\",\n                    component: \"setupDate\"\n                }]);\n            }];\n\n            _export(\"default\", PetcupidAppCtrl);\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"core/core.config\", [], function (_export) {\n    var camelToDash, camelToCtrl;\n    return {\n        setters: [],\n        execute: function () {\n            camelToDash = function camelToDash(name) {\n                var UPPERCASE = /([A-Z])/g;\n\n                var upperCaseToDashLowerCase = function upperCaseToDashLowerCase($1) {\n                    return \"-\" + $1.toLowerCase();\n                };\n\n                return name.replace(UPPERCASE, upperCaseToDashLowerCase);\n            };\n\n            camelToCtrl = function camelToCtrl(name) {\n                return \"\" + name[0].toUpperCase() + name.substring(1) + \"Ctrl\";\n            };\n\n            _export(\"default\", [\"$componentLoaderProvider\", function ($componentLoaderProvider) {\n                \"ngInject\";\n\n                $componentLoaderProvider.setTemplateMapping(function (component) {\n                    return \"app/\" + camelToDash(component) + \"/\" + camelToDash(component) + \".html\";\n                });\n                $componentLoaderProvider.setCtrlNameMapping(function (component) {\n                    return camelToCtrl(component);\n                });\n            }]);\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"core/core.module\", [\"core/core.config\", \"core/core.pet.service\"], function (_export) {\n    var routerConfig, PetService;\n    return {\n        setters: [function (_coreCoreConfig) {\n            routerConfig = _coreCoreConfig.default;\n        }, function (_coreCorePetService) {\n            PetService = _coreCorePetService.default;\n        }],\n        execute: function () {\n            _export(\"default\", angular.module(\"app.core\", [\"ngNewRouter\", \"ngResource\"]).config(routerConfig).service(\"petService\", PetService));\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"core/core.pet.service\", [], function (_export) {\n    var _createClass, PetService;\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            _createClass = (function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n\n                return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            })();\n\n            PetService = (function () {\n                function PetService($resource) {\n                    \"ngInject\";\n\n                    _classCallCheck(this, PetService);\n\n                    this.Pet = $resource(\"api/pet/:petId\", {\n                        petId: \"@id\"\n                    });\n                }\n                PetService.$inject = [\"$resource\"];\n\n                _createClass(PetService, [{\n                    key: \"query\",\n                    value: function query() {\n                        return this.Pet.query();\n                    }\n                }, {\n                    key: \"get\",\n                    value: function get(id) {\n                        return this.Pet.get({\n                            petId: id\n                        });\n                    }\n                }]);\n\n                return PetService;\n            })();\n\n            _export(\"default\", PetService);\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"gallery/gallery.controller\", [], function (_export) {\n    var _createClass, GalleryCtrl;\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            _createClass = (function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n\n                return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            })();\n\n            GalleryCtrl = (function () {\n                function GalleryCtrl(petService, $location) {\n                    \"ngInject\";\n\n                    _classCallCheck(this, GalleryCtrl);\n\n                    this.petService = petService;\n                    this.location = $location;\n                }\n                GalleryCtrl.$inject = [\"petService\", \"$location\"];\n\n                _createClass(GalleryCtrl, [{\n                    key: \"activate\",\n                    value: function activate() {\n                        this.pets = this.petService.query();\n                        this.searchCriteria = {\n                            $: \"\",\n                            race: \"\"\n                        };\n                        this.selectedPet = null;\n                    }\n                }, {\n                    key: \"selectPet\",\n                    value: function selectPet($event, newPet) {\n                        this.selectedPet = newPet;\n                        $event.stopPropagation();\n                    }\n                }, {\n                    key: \"deselectPet\",\n                    value: function deselectPet() {\n                        this.selectedPet = null;\n                    }\n                }, {\n                    key: \"setupDate\",\n                    value: function setupDate() {\n                        this.location.path(\"/pets/\" + this.selectedPet.id);\n                    }\n                }]);\n\n                return GalleryCtrl;\n            })();\n\n            _export(\"default\", GalleryCtrl);\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"gallery/gallery.module\", [\"gallery/gallery.controller\", \"core/core.module\"], function (_export) {\n    var GalleryCtrl, CoreModule;\n    return {\n        setters: [function (_galleryGalleryController) {\n            GalleryCtrl = _galleryGalleryController.default;\n        }, function (_coreCoreModule) {\n            CoreModule = _coreCoreModule.default;\n        }],\n        execute: function () {\n            _export(\"default\", angular.module(\"app.gallery\", [CoreModule.name]).controller(\"GalleryCtrl\", GalleryCtrl));\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"setup-date/setup-date.controller\", [], function (_export) {\n    var _createClass, SetupDateCtrl;\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            _createClass = (function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n\n                return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            })();\n\n            SetupDateCtrl = (function () {\n                function SetupDateCtrl(petService, $routeParams, $location) {\n                    \"ngInject\";\n\n                    _classCallCheck(this, SetupDateCtrl);\n\n                    this.petService = petService;\n                    this.routeParams = $routeParams;\n                    this.location = $location;\n                }\n                SetupDateCtrl.$inject = [\"petService\", \"$routeParams\", \"$location\"];\n\n                _createClass(SetupDateCtrl, [{\n                    key: \"activate\",\n                    value: function activate() {\n                        this.pet = this.petService.get(this.routeParams.id);\n                        this.selectedLocation = {\n                            lat: 50.85,\n                            long: 4.35\n                        };\n                    }\n                }, {\n                    key: \"cancel\",\n                    value: function cancel() {\n                        this.location.path(\"/\");\n                    }\n                }, {\n                    key: \"submit\",\n                    value: function submit() {\n                        this.location.path(\"/\");\n                    }\n                }]);\n\n                return SetupDateCtrl;\n            })();\n\n            _export(\"default\", SetupDateCtrl);\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"setup-date/setup-date.module\", [\"setup-date/setup-date.controller\", \"core/core.module\"], function (_export) {\n    var SetupDateCtrl, CoreModule;\n    return {\n        setters: [function (_setupDateSetupDateController) {\n            SetupDateCtrl = _setupDateSetupDateController.default;\n        }, function (_coreCoreModule) {\n            CoreModule = _coreCoreModule.default;\n        }],\n        execute: function () {\n            _export(\"default\", angular.module(\"app.setup-date\", [CoreModule.name]).controller(\"SetupDateCtrl\", SetupDateCtrl));\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"widgets/widgets.google-maps.directive\", [], function (_export) {\n    var _createClass, GoogleMapsDirective;\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            _createClass = (function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n\n                return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            })();\n\n            GoogleMapsDirective = (function () {\n                function GoogleMapsDirective() {\n                    _classCallCheck(this, GoogleMapsDirective);\n\n                    this.restrict = \"A\";\n                    this.scope = {\n                        \"marker\": \"=\"\n                    };\n                }\n\n                _createClass(GoogleMapsDirective, [{\n                    key: \"link\",\n                    value: function link(scope, element) {\n                        var map = new google.maps.Map(element[0], {\n                            center: new google.maps.LatLng(50.85, 4.35),\n                            zoom: 8\n                        });\n                        var marker = new google.maps.Marker({\n                            position: new google.maps.LatLng(50.85, 4.35),\n                            map: map,\n                            draggable: true\n                        });\n                        google.maps.event.addListener(marker, \"dragend\", function () {\n                            scope.$apply(function () {\n                                scope.marker = {\n                                    lat: marker.getPosition().lat(),\n                                    long: marker.getPosition().lng()\n                                };\n                            });\n                        });\n                    }\n                }]);\n\n                return GoogleMapsDirective;\n            })();\n\n            _export(\"default\", GoogleMapsDirective);\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"widgets/widgets.module\", [\"widgets/widgets.google-maps.directive\", \"widgets/widgets.reverse-geocode.directive\"], function (_export) {\n    var GoogleMapsDirective, ReverseGeocodeDirective;\n    return {\n        setters: [function (_widgetsWidgetsGoogleMapsDirective) {\n            GoogleMapsDirective = _widgetsWidgetsGoogleMapsDirective.default;\n        }, function (_widgetsWidgetsReverseGeocodeDirective) {\n            ReverseGeocodeDirective = _widgetsWidgetsReverseGeocodeDirective.default;\n        }],\n        execute: function () {\n            _export(\"default\", angular.module(\"app.widgets\", []).directive(\"pcGoogleMaps\", function () {\n                return new GoogleMapsDirective();\n            }).directive(\"pcReverseGeocode\", function () {\n                return new ReverseGeocodeDirective();\n            }));\n        }\n    };\n});\n\"use strict\";\n\nSystem.register(\"widgets/widgets.reverse-geocode.directive\", [], function (_export) {\n    var _createClass, ReverseGeocodeDirective;\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            _createClass = (function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n\n                return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            })();\n\n            ReverseGeocodeDirective = (function () {\n                function ReverseGeocodeDirective() {\n                    _classCallCheck(this, ReverseGeocodeDirective);\n\n                    this.restrict = \"E\";\n                    this.scope = {\n                        \"position\": \"=\"\n                    };\n                    this.template = \"{{address}}\";\n                }\n\n                _createClass(ReverseGeocodeDirective, [{\n                    key: \"link\",\n                    value: function link(scope) {\n                        var geocoder = new google.maps.Geocoder();\n                        scope.$watch(\"position\", function (newPosition) {\n                            var latlng = new google.maps.LatLng(newPosition.lat, newPosition.long);\n                            geocoder.geocode({\n                                \"latLng\": latlng\n                            }, function (results) {\n                                scope.$apply(function () {\n                                    scope.address = results[0].formatted_address;\n                                });\n                            });\n                        });\n                    }\n                }]);\n\n                return ReverseGeocodeDirective;\n            })();\n\n            _export(\"default\", ReverseGeocodeDirective);\n        }\n    };\n});","export default class GalleryCtrl {\n\n    constructor(petService, $location) {\n        \"ngInject\";\n        this.petService = petService;\n        this.location = $location;\n    }\n\n    activate() {\n        this.pets = this.petService.query();\n        this.searchCriteria = {\n            $: \"\",\n            race: \"\"\n        };\n        this.selectedPet = null;\n    }\n\n    selectPet($event, newPet) {\n        this.selectedPet = newPet;\n        $event.stopPropagation();\n    }\n\n    deselectPet() {\n        this.selectedPet = null;\n    }\n\n    setupDate() {\n        this.location.path(`/pets/${this.selectedPet.id}`);\n    }\n}\n","import GalleryCtrl from \"gallery/gallery.controller\";\nimport CoreModule from \"core/core.module\";\n\nexport default angular\n    .module(\"app.gallery\", [CoreModule.name])\n    .controller(\"GalleryCtrl\", GalleryCtrl);\n","export default class SetupDateCtrl {\n\n    constructor(petService, $routeParams, $location) {\n        \"ngInject\";\n        this.petService = petService;\n        this.routeParams = $routeParams;\n        this.location = $location;\n    }\n\n    activate(){\n        this.pet = this.petService.get(this.routeParams.id);\n        this.selectedLocation = {\n            lat: 50.85,\n            long: 4.35\n        };\n    }\n\n    cancel() {\n        this.location.path(`/`);\n    }\n\n    submit() {\n        this.location.path(`/`);\n    }\n}\n","import SetupDateCtrl from \"setup-date/setup-date.controller\";\nimport CoreModule from \"core/core.module\";\n\nexport default angular\n    .module(\"app.setup-date\", [CoreModule.name])\n    .controller(\"SetupDateCtrl\", SetupDateCtrl);\n","/* globals google */\n\nexport default class GoogleMapsDirective {\n\n    constructor() {\n        this.restrict = \"A\";\n        this.scope = {\n            \"marker\": \"=\"\n        };\n    }\n\n    link(scope, element) {\n        let map = new google.maps.Map(element[0], {\n            center: new google.maps.LatLng(50.85, 4.35),\n            zoom: 8\n        });\n        let marker = new google.maps.Marker({\n            position: new google.maps.LatLng(50.85, 4.35),\n            map,\n            draggable: true\n        });\n        google.maps.event.addListener(marker, \"dragend\", function() {\n            scope.$apply(function() {\n                scope.marker = {\n                    lat: marker.getPosition().lat(),\n                    long: marker.getPosition().lng()\n                };\n            });\n        });\n    }\n}\n","import GoogleMapsDirective from \"widgets/widgets.google-maps.directive\";\nimport ReverseGeocodeDirective from \"widgets/widgets.reverse-geocode.directive\";\n\nexport default angular\n    .module(\"app.widgets\", [])\n    .directive(\"pcGoogleMaps\", () => new GoogleMapsDirective())\n    .directive(\"pcReverseGeocode\", () => new ReverseGeocodeDirective());\n","/* global google */\nexport default class ReverseGeocodeDirective {\n\n    constructor() {\n        this.restrict = \"E\";\n        this.scope = {\n            \"position\": \"=\"\n        };\n        this.template = \"{{address}}\";\n    }\n\n    link(scope) {\n        const geocoder = new google.maps.Geocoder();\n        scope.$watch(\"position\", function(newPosition) {\n            const latlng = new google.maps.LatLng(newPosition.lat, newPosition.long);\n            geocoder.geocode({\n                \"latLng\": latlng\n            }, function(results) {\n                scope.$apply(function() {\n                    scope.address = results[0].formatted_address;\n                });\n            });\n        });\n    }\n}\n"],"sourceRoot":"/source/"}