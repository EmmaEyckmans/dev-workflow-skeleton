stage concurrency: 1, name: "commit"
	node("linux && jdk8 && mvn3 && docker") {
		def javaHome = tool "jdk8"
    	def mvnHome = tool "mvn3"
    	def dbName = "dws_db_jenkins"
	    
	    clearWorkspace()
	    cloneProject()
		startDb(dbName)
		mavenBuildWithoutUiTests(javaHome, mvnHome)
		archiveTestResults()
		stopDb(dbName)
	}

/* Helper functions */
def clearWorkspace() {
	sh "rm -rf *"	
}

def cloneProject() {
	git credentialsId: "385df167-99f7-408d-b9d8-ad982a7c997b", url: "https://github.com/cegeka/dev-workflow-skeleton.git"
}

def startDb(dbName) {
	sh "docker build -t dws_db ops/dws/db/"
	try { sh "docker rm -f ${dbName}" } catch(e) {}
	sh "docker run -d --net jenkins --name ${dbName} dws_db"
}

def stopDb(dbName) {
	sh "docker stop ${dbName}"
	sh "docker rm ${dbName}"	
}

def mavenBuildWithoutUiTests(javaHome, mvnHome) {	
	dir("dws") {
		withEnv(["JAVA_HOME=${javaHome}", "PATH+MAVEN=${mvnHome}/bin"]) {
		    sh "mvn clean install -Ddws.environment=jenkins -pl '!:dws-acc-tests'"
		}
	}
}

def archiveTestResults(){
	step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
	step([$class: 'JUnitResultArchiver', testResults: '**/target/failsafe-reports/TEST-*.xml'])
}